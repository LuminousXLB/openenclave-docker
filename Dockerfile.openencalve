FROM ubuntu:focal AS OPENENCLAVE

ARG DEBIAN_FRONTEND=noninteractive

ARG PCCS_SERVER

COPY ./common /tmp/common
WORKDIR /tmp

RUN set -x \
    # Add apt repositories
    && /tmp/common/add-apt-sources.sh \
    # Install dependencies
    && apt-get install --no-install-recommends -y \
    apt-transport-https \
    software-properties-common \
    sudo \
    build-essential \
    clang-10 \
    curl \
    gdb \
    git \
    libssl-dev \
    libtool \
    linux-headers-$(uname -r) \
    lldb-10 \
    ninja-build \
    pkg-config python \
    python3-apt \
    python3-pip \
    wget \
    # install developer packages
    && apt-get install --no-install-recommends -y \
    libsgx-dcap-default-qpl-dbgsym \
    libsgx-dcap-ql-dbgsym \
    libsgx-enclave-common-dbgsym \
    libsgx-epid-dbgsym \
    libsgx-quote-ex-dbgsym \
    libsgx-uae-service-dbgsym \
    # install default quote provider library (QPL)
    && PCCS_SERVER=${PCCS_SERVER} /tmp/common/config-default-qpl.sh \
    && ln -s $(readlink -f /usr/lib/x86_64-linux-gnu/libdcap_quoteprov.so.1) /usr/lib/x86_64-linux-gnu/libdcap_quoteprov.so \
    # install open-enclave
    && apt-get install --no-install-recommends -y open-enclave \
    # install cmake
    && pip3 --no-cache-dir install cmake \
    # apply lvi-mitigation
    && /tmp/common/apply-lvi-mitigation.sh \
    # add sgx_prv group
    && groupadd --gid 1001 sgx_prv \
    && rm -rf /var/lib/apt/lists/*


FROM OPENENCLAVE AS INTEL

ARG DEBIAN_FRONTEND=noninteractive

WORKDIR /opt/intel

RUN set -x \
    && apt-get update \
    && apt-get install --no-install-recommends -y \
    autoconf \
    automake \
    debhelper \
    libcurl4-openssl-dev \
    libprotobuf-dev \
    ocaml \
    ocamlbuild \
    perl \
    protobuf-compiler \
    python-is-python3 \
    reprepro \
    && rm -rf /var/lib/apt/lists/*  \
    # install intel sgx sdk
    && . /etc/os-release \
    && wget https://download.01.org/intel-sgx/latest/linux-latest/distro/${ID}${VERSION_ID}-server/sgx_linux_x64_sdk_2.14.100.2.bin \
    && chmod +x sgx_linux_x64_sdk_2.14.100.2.bin \
    && echo 'yes' | ./sgx_linux_x64_sdk_2.14.100.2.bin \
    && rm ./sgx_linux_x64_sdk_2.14.100.2.bin \
    && echo "source /opt/intel/sgxsdk/environment" >> /etc/profile.d/50-sgxsdk.sh \
    && echo "SGX_AESM_ADDR=1" >> /etc/environment

FROM INTEL AS DEVELOPMENT

ARG DEBIAN_FRONTEND=noninteractive

ARG MBEDTLS_VERSION

RUN set -x \
    && apt-get update \
    && apt-get install --no-install-recommends -y \
    bear \
    bsdmainutils  \
    clang-format-10 \
    clang-tidy-10 \
    lsof \
    netcat \
    python3-dev \
    unzip \
    vim \
    zip \
    && pip3 --no-cache-dir install \
    cmakelang \
    setuptools \
    wheel \
    && rm -rf /var/lib/apt/lists/* \
    # link clang{-format, -tidy, d}-10
    && ln -s /usr/bin/clang-10 /usr/bin/clang \
    && ln -s /usr/bin/clang++-10 /usr/bin/clang++ \
    && ln -s /usr/bin/clang-format-10 /usr/bin/clang-format \
    && ln -s /usr/bin/clang-tidy-10 /usr/bin/clang-tidy \
    # install mbedtls
    && MBEDTLS_VERSION=${MBEDTLS_VERSION} /tmp/common/install-mbedtls.sh


FROM DEVELOPMENT AS SHARE

WORKDIR /root

RUN set -x \
    && apt-get update \
    && apt-get install --no-install-recommends -y \
    openssh-server \
    rsyslog \
    && rm -rf /var/lib/apt/lists/* \
    # add default user
    && groupadd --gid 1000 jiamin \
    && useradd --create-home --uid 1000 --gid 1000 --shell /bin/bash jiamin \
    && echo "jiamin ALL=(ALL) NOPASSWD: ALL" >>/etc/sudoers \
    && groupadd --gid 1002 jeremy \
    && useradd --create-home --uid 1002 --gid 1002 --shell /bin/bash jeremy \
    && echo "jeremy ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers \
    # set timezone
    && /tmp/common/set-timezone.sh \
    && rm -rf /tmp/* \
    # prepare sshd
    && ssh-keygen -A \
    && mkdir /run/sshd

CMD set -x \
    && service rsyslog start \
    && /usr/sbin/sshd -D
